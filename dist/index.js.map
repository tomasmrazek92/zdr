{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/swipers.js", "../src/utils/globalSwipers.js", "../src/index.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Sample data for swiperInstances, specific to this page\nexport const swiperInstances = [\n  // Global\n  [\n    '.section.cc-stats',\n    '.stats-grid',\n    'stats',\n    {\n      autoHeight: 'true',\n      breakpoints: {\n        768: {\n          slidesPerView: 2,\n        },\n        992: {\n          slidesPerView: 4,\n        },\n      },\n    },\n    'desktop',\n  ],\n  [\n    '[data-carousel-logo]',\n    '.logos-carousel_grid',\n    'logos',\n    {\n      slidesPerView: 2,\n      grid: {\n        rows: 2,\n      },\n    },\n    'all',\n  ],\n  [\n    '[data-carousel-news]',\n    '.news_grid-wrap',\n    'news',\n    {\n      observer: true,\n      breakpoints: {\n        0: {\n          slidesPerView: 1.1,\n          spaceBetween: 8,\n          grid: {\n            rows: 1,\n          },\n        },\n        768: {\n          spaceBetween: 32,\n          slidesPerView: 1,\n          grid: {\n            rows: 2,\n          },\n        },\n        992: {\n          spaceBetween: 32,\n          slidesPerView: 2,\n          grid: {\n            rows: 2,\n          },\n        },\n      },\n    },\n    'all',\n  ],\n  [\n    '[data-carousel-team]',\n    '.team_grid-wrap',\n    'team',\n    {\n      slidesPerView: 1.2,\n      spaceBetween: 8,\n    },\n    'mobile',\n  ],\n  [\n    '.step-row',\n    '.step-row_slider',\n    'steps',\n    {\n      spaceBetween: 0,\n      breakpoints: {\n        0: {\n          slidesPerView: 'auto',\n        },\n        992: {\n          slidesPerView: 3,\n        },\n      },\n    },\n    'all',\n  ],\n  [\n    '[data-carousel-pillar]',\n    '.pillar-slider',\n    'pillar',\n    {\n      spaceBetween: 0,\n      breakpoints: {\n        0: {\n          slidesPerView: 'auto',\n        },\n        992: {\n          slidesPerView: 2,\n        },\n      },\n    },\n    'all',\n  ],\n  [\n    '[data-carousel-project]',\n    '.project-logos',\n    'pillar',\n    {\n      spaceBetween: 0,\n      breakpoints: {\n        0: {\n          slidesPerView: 'auto',\n        },\n        992: {\n          slidesPerView: 4,\n        },\n      },\n    },\n    'all',\n  ],\n];\n", "// --- Swipers Start ---\nlet windowWidth = window.innerWidth;\n// Create an object to hold unique counters for each classSelector.\nlet uniqueIdCounters = {};\nlet shouldInitializeImmediately = false; // Add this flag at the top of your function\n\nexport const createResponsiveSwiper = (\n  componentSelector,\n  swiperSelector,\n  classSelector,\n  options,\n  mode\n) => {\n  // Step 2: Fetch elements by their componentSelector; if none, exit the function\n  let elements = $(componentSelector);\n  if (elements.length === 0) return;\n\n  // Reset the uniqueIdCounters for this classSelector to 0\n  uniqueIdCounters[classSelector] = 0;\n\n  // Step 3: Loop through each matched element\n  uniqueIdCounters[classSelector] = uniqueIdCounters[classSelector] || 0;\n  elements.each(function () {\n    // Generate a unique key for this instance based on the classSelector and a counter\n    let uniqueKey = `${classSelector}_${uniqueIdCounters[classSelector]}`;\n\n    // Step 4: Add unique classes to swiper container, arrows and pagination for this instance\n    addUniqueClassesToElements(this, swiperSelector, uniqueKey, [\n      '.swiper-arrow',\n      '.swiper-pag',\n      '.swiper-drag-wrapper',\n      '.swiper-navigation',\n    ]);\n\n    // Step 5: Merge default and passed swiper options\n    let swiperOptions = getMergedSwiperOptions(options, uniqueKey);\n\n    // Step 6: Initialize or destroy swipers based on media query and passed mode\n    manageSwiperInstance(this, swiperSelector, uniqueKey, classSelector, swiperOptions, mode);\n\n    // Increment unique ID counter for the specific classSelector\n    uniqueIdCounters[classSelector]++;\n  });\n};\n\n// Adds unique classes to swiper and control elements\nconst addUniqueClassesToElements = (context, swiperSelector, uniqueKey, controlSelectors) => {\n  controlSelectors.forEach((selector) => {\n    $(context).find(selector).addClass(uniqueKey);\n  });\n  $(context).find(swiperSelector).addClass(uniqueKey);\n};\n\n// Merge default and custom swiper options\nconst getMergedSwiperOptions = (options, uniqueKey) => {\n  // Default pagination config\n  const defaultPagination = {\n    el: `.swiper-navigation.${uniqueKey}`,\n    dynamicBullets: true,\n    type: 'bullets',\n    clickable: true,\n  };\n\n  // Merge pagination options if provided, otherwise use default\n  const paginationConfig = options.pagination\n    ? { ...defaultPagination, ...options.pagination }\n    : defaultPagination;\n\n  // Handle event merging\n  const existingEvents = options.on || {};\n  const enhancedEvents = {\n    ...existingEvents,\n    init: function (...args) {\n      if (existingEvents.init) {\n        existingEvents.init.apply(this, args);\n      }\n\n      setTimeout(() => {\n        if (typeof ScrollTrigger !== 'undefined') {\n          ScrollTrigger.refresh();\n        }\n      }, 100);\n    },\n    resize: function (...args) {\n      // Call existing resize if it exists\n      if (existingEvents.resize) {\n        existingEvents.resize.apply(this, args);\n      }\n      if (typeof ScrollTrigger !== 'undefined') {\n        ScrollTrigger.refresh();\n      }\n    },\n  };\n\n  return {\n    speed: 1000,\n    navigation: {\n      prevEl: `.swiper-arrow.prev.${uniqueKey}`,\n      nextEl: `.swiper-arrow.next.${uniqueKey}`,\n    },\n    mousewheel: {\n      enabled: true,\n      forceToAxis: true,\n      thresholdDelta: 25,\n    },\n    pagination: paginationConfig,\n    ...options,\n    on: enhancedEvents, // Override the 'on' property after spreading options\n  };\n};\n\n// This function manages Swiper instances: initializing or destroying them based on certain conditions\nconst manageSwiperInstance = (\n  context,\n  swiperSelector,\n  uniqueKey,\n  classSelector,\n  swiperOptions,\n  mode\n) => {\n  // Initialize the nested object for storing Swiper instances if it doesn't exist\n  swipers[classSelector] = swipers[classSelector] || {};\n  swipers[classSelector][uniqueKey] = swipers[classSelector][uniqueKey] || {};\n\n  // Fetch the existing Swiper instance information, if it exists\n  let existingInstance = swipers[classSelector][uniqueKey];\n  let existingSwiper = existingInstance.swiperInstance;\n\n  // Determine under what conditions the Swiper should be initialized for desktop and mobile\n  let shouldInitDesktop = mode === 'desktop' && window.matchMedia('(min-width: 768px)').matches;\n  let shouldInitMobile =\n    mode === 'mobile' && window.matchMedia('(min-width: 0px) and (max-width: 767px)').matches;\n  let shouldInitAll = mode === 'all';\n\n  // Destroy function\n  const destroySwiper = () => {\n    if (existingSwiper) {\n      existingSwiper.destroy(true, true);\n      delete swipers[classSelector][uniqueKey];\n      console.log('Swiper destroyed for', swiperSelector, 'with uniqueKey', uniqueKey);\n    }\n  };\n\n  // Reinitialize function\n  const reInitObserver = () => {\n    const swiperElement = $(`${swiperSelector}.${uniqueKey}`)[0];\n    if (!swiperElement) return;\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (shouldInitDesktop || shouldInitMobile || shouldInitAll) {\n          if (!existingSwiper) {\n            let swiper = new Swiper(`${swiperSelector}.${uniqueKey}`, swiperOptions);\n            swipers[classSelector][uniqueKey] = {\n              swiperInstance: swiper,\n              mode: shouldInitDesktop ? 'desktop' : shouldInitMobile ? 'mobile' : 'all',\n              initialized: true,\n            };\n            observer.disconnect();\n            console.log('Swiper initialized for', swiperSelector, 'with uniqueKey', uniqueKey);\n          }\n        }\n      });\n    }, {});\n\n    // Store the observer instance\n    swipers[classSelector][uniqueKey].observer = observer;\n\n    // Observe the element\n    observer.observe(swiperElement);\n  };\n\n  // Check the conditions and either destroy or reinitialize\n  if (!shouldInitDesktop && mode === 'desktop') destroySwiper();\n  else if (!shouldInitMobile && mode === 'mobile') destroySwiper();\n  else if (!shouldInitAll && mode === 'all') destroySwiper();\n  else if ((shouldInitDesktop || shouldInitMobile || shouldInitAll) && !existingSwiper) {\n    reInitObserver();\n  }\n};\n\n// Function to initialize swipers from an array of instances\nexport const runSwipers = (swiperInstances) => {\n  swiperInstances.forEach((instance) => {\n    createResponsiveSwiper(...instance);\n  });\n};\n\nexport const initSwipers = (swiperInstances, swipersState) => {\n  // Load\n  runSwipers(swiperInstances);\n\n  // Resize\n  window.addEventListener('resize', function () {\n    if (window.innerWidth !== windowWidth) {\n      windowWidth = window.innerWidth;\n      runSwipers(swiperInstances);\n    }\n  });\n};\n", "import { swiperInstances } from './swipers';\nimport { initSwipers } from './utils/globalSwipers';\n\n$(document).ready(function () {\n  console.log(swiperInstances);\n  initSwipers(swiperInstances);\n});\n"],
  "mappings": "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",
  "names": ["swiperInstances"]
}
